#+TITLE: Godot Engine REPL Module
#+AUTHOR: Franco Eus√©bio Garcia

* Information

This adds a Repeat, Evaluate, Print, Loop (REPL) module to Godot, allowing one
to evaluate GDScript expressions in the editor itself.

* Example

See the =editor_plugin= project.

Currently, it only supports expressions which evaluates to a result (or a call
to an existing function).

* Installation

Clone or extract this project into Godot's ~module~ directory. Then follow the
instructions to build Godot to your platform.

** Linux (X11)

#+BEGIN_SRC sh
scons platform=x11
#+END_SRC

** Windows

#+BEGIN_SRC sh
scons platform=windows
#+END_SRC

* Development Notes

** Tasks

*** TODO Add the scene as a subproject

** Improvements

*** Randomly named function call

Use timestamp.

**** Alternative

Number each call, like [1], [2], ..., [n]. This way, they may become session
variables.

#+BEGIN_SRC c++
#ifdef DEBUG_ENABLED
#+END_SRC

*** ~load()~ and ~preload()~ loads GDScript files

** Might be Useful

*** Running a script from the shell

#+BEGIN_SRC sh
godot -s file.gd
#+END_SRC

It is implemented in =main/main.cpp=:

#+BEGIN_SRC c++
Ref<Script> script_res = ResourceLoader::load(script);
ERR_EXPLAIN("Can't load script: "+script);
ERR_FAIL_COND_V(script_res.is_null(),false);

if( script_res->can_instance() /*&& script_res->inherits_from("SceneTreeScripted")*/) {

  StringName instance_type=script_res->get_instance_base_type();
  Object *obj = ObjectTypeDB::instance(instance_type);
  MainLoop *script_loop = obj?obj->cast_to<MainLoop>():NULL;
  if (!script_loop) {
	  if (obj)
	  memdelete(obj);
	  ERR_EXPLAIN("Can't load script '"+script+"', it does not inherit from a MainLoop type");
	  ERR_FAIL_COND_V(!script_loop,false);
  }

  script_loop->set_init_script(script_res);
  main_loop=script_loop;
} else {

  return false;
}
#+END_SRC

The scripts must either extend ~SceneTree~ or ~MainLoop~. For example:

#+BEGIN_SRC godot-gdscript
#sayhello.gd
extends SceneTree

func _init():
	print("Hello!")
	quit()
#+END_SRC

*** Scripts: ~class GDScriptLanguage : public ScriptLanguage~

Load, call, debug functions.

*** ~gdscriptlanguage::execute_file()~

Not implemented.

#+BEGIN_SRC c++
Error GDScriptLanguage::execute_file(const String& p_path)  {

  // ??
  return OK;
}
#+END_SRC

*** ~script::update_exports()~

*** ~gd_script::load_source_code()~

In: =modules/gdscript/gd_script.cpp=.

*** ~globals::_decode_variant()~ and ~globals::_encode_variant()~

*** ~globals::add_singleton()~, ~globals::get_singleton_object()~, ~globals::has_singleton()~, ~globals::get_singleton()~

*** ~code_editor::_validate_script()~, ~code_editor::apply_code()~

*** ~script_editor_plugin::save_all_scripts~, ~script_editor_plugin::apply_scripts()~

Also see debug, play, ~EDITOR_DEF()~

** Figure Out

*** ~globals::get_chunk()~
